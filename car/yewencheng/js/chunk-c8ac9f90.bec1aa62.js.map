{"version":3,"sources":["webpack:///./src/views/picture.vue?3b5f","webpack:///./src/views/picture.vue?a9a1","webpack:///./node_modules/_ssr-window@1.0.1@ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/_dom7@2.1.3@dom7/dist/dom7.modular.js","webpack:///./node_modules/_swiper@4.5.0@swiper/dist/js/swiper.esm.bundle.js","webpack:///./src/views/picture.vue?3d6b","webpack:///./src/views/picture.vue?48b6","webpack:///./src/views/picture.vue"],"names":["_node_modules_mini_css_extract_plugin_0_6_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_1_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_1_vue_loader_lib_index_js_vue_loader_options_picture_vue_vue_type_style_index_0_id_6126da6b_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_0_6_0_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_1_0_1_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_15_7_1_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_3_0_0_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_7_1_0_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_2_0_1_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_15_7_1_vue_loader_lib_index_js_vue_loader_options_picture_vue_vue_type_style_index_0_id_6126da6b_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","picturevue_type_template_id_6126da6b_scoped_true_render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","to","tag","_v","_s","getColorId","Name","getTypeId","car_name","market_attribute","year","directives","name","rawName","value","isSwiper","expression","_l","item","key","Id","val","index","on","click","$event","goToDetail","src","Url","alt","class","Count","_e","pictureList","length","isShow","ref","scroll","imgList","detailPictureList","removeSwiper","swiperIndex","low","staticRenderFns","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","swiper_esm_bundle_Browser","isSafari","ua","toLowerCase","isIE","isEdge","isUiWebView","test","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","slidesPerGroup","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","x","y","z","newProgress","previousTranslate","swiper_esm_bundle_translate","transitionStart","runCallbacks","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","animating","swiper_esm_bundle_transition","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","threshold","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","onResize","breakpoints","setBreakpoint","newTranslate","min","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","attachEvents","touchEvents","wrapperEl","onClick","touchEventsTarget","start","passiveListeners","passive","move","end","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","breakpointsInverse","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","containerModifierClass","removeClasses","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","navigation","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","runCallbacksOnInit","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplay","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","Autoplay$1","disableOnInteraction","pause","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","Thumbs$1","swiper_esm_bundle","picturevue_type_script_lang_ts_","vue_runtime_esm","Page","PageSize","computed","_objectSpread","vuex_esm","picture","sortArr","methods","getPicture","toDetail","getColorPicture","getSwiper","getPage","ImageID","ind","mySwiper","ColorID","ColorId","that","$nextTick","$refs","slideChangeTransitionEnd","_this","imgListScroll","timer","$router","car_id","list","created","updated","mounted","console","log","views_picturevue_type_script_lang_ts_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-c8ac9f90.bec1aa62.js","sourcesContent":["import mod from \"-!../../node_modules/_mini-css-extract-plugin@0.6.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./picture.vue?vue&type=style&index=0&id=6126da6b&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/_mini-css-extract-plugin@0.6.0@mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/_css-loader@1.0.1@css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/_sass-loader@7.1.0@sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./picture.vue?vue&type=style&index=0&id=6126da6b&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"wrap\"},[_c('div',{staticClass:\"top\"},[_c('router-link',{attrs:{\"to\":\"/color\",\"tag\":\"span\"}},[_vm._v(_vm._s(_vm.getColorId.Name||'颜色'))]),_c('router-link',{attrs:{\"to\":\"/type\",\"tag\":\"span\"}},[_vm._v(_vm._s(_vm.getTypeId.car_name?(_vm.getTypeId.market_attribute?_vm.getTypeId.market_attribute.year+\"款\":'')+_vm.getTypeId.car_name:'车款'))])],1),(_vm.isShow)?_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isSwiper),expression:\"!isSwiper\"}],staticClass:\"main\"},[_c('div',{staticClass:\"pirture\"},_vm._l((_vm.pictureList),function(item){return _c('ul',{key:item.Id,staticClass:\"list\"},_vm._l((item.List),function(val,index){return _c('li',{key:index,on:{\"click\":function($event){index!==0?_vm.goToDetail(true,item.Id,index):''}}},[_c('img',{attrs:{\"src\":val.Url,\"alt\":\"\"}}),(index===0)?_c('p',{class:index===0?'active':'',on:{\"click\":function($event){return _vm.goToDetail(false,item.Id)}}},[_c('span',[_vm._v(_vm._s(item.Name))]),_c('span',[_vm._v(_vm._s(item.Count)+\"张>\")])]):_vm._e()])}),0)}),0),(!_vm.pictureList.length)?_c('div',{staticClass:\"mask\"},[_c('img',{attrs:{\"src\":\"http://h5.chelun.com/2017/official/img/no-img.png\",\"alt\":\"\"}}),_c('p',[_vm._v(\"暂时还没有内容\")])]):_vm._e()]):_vm._e(),(!_vm.isShow)?_c('div',{ref:\"imgList\",staticClass:\"main\",on:{\"scroll\":_vm.imgList}},[_c('ul',{ref:\"imgListScroll\",staticClass:\"list\"},_vm._l((_vm.detailPictureList.List),function(val,index){return _c('li',{key:index},[_c('img',{attrs:{\"src\":val.Url,\"alt\":\"\"},on:{\"click\":function($event){return _vm.goToDetail(true,_vm.detailPictureList.Id,index)}}})])}),0)]):_vm._e(),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isSwiper),expression:\"isSwiper\"}],staticClass:\"swiper\"},[_c('div',{ref:\"swiper\",staticClass:\"swiper-container\"},[_c('div',{staticClass:\"swiper-wrapper\"},_vm._l((_vm.detailPictureList.List),function(item,index){return _c('div',{key:index,staticClass:\"swiper-slide\",on:{\"click\":_vm.removeSwiper}},[_c('img',{attrs:{\"src\":item.Url,\"alt\":\"\"}})])}),0)]),_c('span',{staticClass:\"count\"},[_vm._v(_vm._s(_vm.swiperIndex)+\"/\"+_vm._s(_vm.detailPictureList.Count))]),_c('span',{staticClass:\"price\",on:{\"click\":_vm.low}},[_vm._v(\"询最低价\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from \"vue\";\r\nimport Swiper from \"swiper\";\r\nimport \"swiper/dist/css/swiper.min.css\";\r\nimport { mapActions, mapState, mapGetters, mapMutations } from \"vuex\";\r\nexport default Vue.extend({\r\n  props: {},\r\n  components: {},\r\n  data() {\r\n    return {\r\n      isShow: true, //控制图片详情显隐\r\n      isSwiper: false, //控制轮播图显隐\r\n      swiperIndex: 1,\r\n      Page: 1,\r\n      PageSize: 30,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      pictureList: (state: any) => state.picture.pictureList,\r\n      detailPictureList: (state: any) => state.picture.detailPictureList,\r\n      getColorId:(state:any)=>state.picture.getColorId,\r\n      getTypeId:(state:any)=>state.picture.getTypeId\r\n    }),\r\n    ...mapGetters({\r\n      sortArr:\"car/sortArr\",\r\n    })\r\n  },\r\n  methods: {\r\n    ...mapActions({\r\n      getPicture: \"picture/getPicture\",\r\n      toDetail: \"picture/toDetail\",\r\n      getColorPicture: \"picture/getColorPicture\",\r\n      getSwiper: \"picture/getSwiper\",\r\n      getPage: \"picture/getPage\"\r\n    }),\r\n    //图片详情\r\n    goToDetail(isSwiper: number, ImageID: string, ind: number) {\r\n     \r\n      if (!isSwiper) {\r\n        this.isShow = false;\r\n      } else {\r\n        this.mySwiper(ind);\r\n      }\r\n       this.toDetail({ ImageID, ColorID: this.getColorId.ColorId});\r\n    },\r\n    //轮播图\r\n    mySwiper(ind: number) {\r\n      let that = this;\r\n      that.isSwiper = true;\r\n      that.$nextTick(() => {\r\n        let mySwiper = new Swiper(that.$refs.swiper, {\r\n          observer: true,\r\n          on: {\r\n            slideChangeTransitionEnd: function() {\r\n              //切换结束时，告诉我现在是第几个slide\r\n              that.swiperIndex = this.activeIndex + 1;\r\n              if (that.swiperIndex === that.Page * that.PageSize - 5) {\r\n                that.getPage({\r\n                  ColorID: that.getColorId.ColorId,\r\n                   Page:++that.Page,\r\n                   PageSize:that.PageSize\r\n                });\r\n              }\r\n            }\r\n          }\r\n        });\r\n        mySwiper.slideTo(ind, 1); //切换到第一个slide\r\n      });\r\n    },\r\n    //隐藏swiper\r\n    removeSwiper() {\r\n      this.isSwiper = false;\r\n    },\r\n    //上拉加载\r\n    imgList() {\r\n      //可滚动容器的高度\r\n      let innerHeight = this.$refs.imgListScroll.clientHeight;\r\n      //屏幕尺寸高度\r\n      let outerHeight = this.$refs.imgList.clientHeight;\r\n      //可滚动容器超出当前窗口显示范围的高度\r\n      let scrollTop = this.$refs.imgList.scrollTop;\r\n      //scrollTop在页面为滚动时为0，开始滚动后，慢慢增加，滚动到页面底部时，出现innerHeight < (outerHeight + scrollTop)的情况，严格来讲，是接近底部。\r\n      // console.log(innerHeight + \" \" + outerHeight + \" \" + scrollTop);\r\n      if (innerHeight < outerHeight + scrollTop) {\r\n        // //加载更多操作\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n          this.getPage({\r\n            ColorID: this.getColorId.ColorId,\r\n            Page:++this.Page,\r\n            PageSize:this.PageSize\r\n          });\r\n        }, 500);\r\n      }\r\n    },\r\n    //去询问低价\r\n    low(){\r\n      this.$router.push({\r\n        name:\"quotation\",\r\n        params:{\r\n          car_id:this.getTypeId.car_id||this.sortArr[0].list[0].car_id\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n     this.timer=0\r\n     this.getColorPicture();\r\n  },\r\n  updated() {},\r\n  mounted() {\r\n    console.log(\"deta\",this.getTypeId)\r\n  }\r\n});\r\n","import mod from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../node_modules/_ts-loader@5.4.5@ts-loader/index.js??ref--13-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./picture.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--13-0!../../node_modules/_thread-loader@2.1.2@thread-loader/dist/cjs.js!../../node_modules/_babel-loader@8.0.6@babel-loader/lib/index.js!../../node_modules/_ts-loader@5.4.5@ts-loader/index.js??ref--13-3!../../node_modules/_cache-loader@2.0.1@cache-loader/dist/cjs.js??ref--0-0!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/index.js??vue-loader-options!./picture.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./picture.vue?vue&type=template&id=6126da6b&scoped=true&\"\nimport script from \"./picture.vue?vue&type=script&lang=ts&\"\nexport * from \"./picture.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./picture.vue?vue&type=style&index=0&id=6126da6b&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/_vue-loader@15.7.1@vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6126da6b\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}